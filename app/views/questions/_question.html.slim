.question id= "question-#{@question.id}"
  h2
    = @question.title
  h3
    = @question.body

    - if can?(:manage, question.question_subscription.build)
      - if QuestionSubscription.where(question: question, user: current_user).first
        = link_to 'Unsubscribe', unsubscribe_question_subscriptions_path(question_id: question.id), method: :delete
      - else
        = link_to 'Subscribe', subscribe_question_subscriptions_path(question_id: question.id), method: :post

  h5 Attachments:
  ul.files id= "files_attached-#{@question.id}"
    - if @question.files.attached?
      = render partial: 'shared/attachment', collection: @question.files
  
  h5 Links:
  ul
    = render @question.links

  = render 'shared/votes', resource: question

  - if can?(:manage, @question)
    = form_with model: @question, class: "attach", local: false do |f|
      = f.label :files
      = f.file_field :files, multiple: true, direct_upload: true

      = f.submit 'Attach'

    .buttons-row
      p.delete
        = link_to 'Delete', question_path(@question), method: :delete
      p.edit
        = link_to 'Edit', '#', class: 'edit-question link', data: { question_id: @question.id }

    = form_with model: @question, class: 'hidden', html: { id: "edit-question-#{@question.id}"}, local: false do |f|
      p
        = f.label :title
        = f.text_field :title
      p
        = f.label :body
        = f.text_area :body

      = f.submit 'Save', class: 'btn btn-primary'


  .comments
    .comment-errors
    .h5 Comments:
    = render @question.comments
  .new-comment
    = form_with model: [@question, @question.comments.build], local: false, format: :js do |f|
      = f.label :body, 'Comment:'
      = f.text_area :body
      = f.submit 'Comment'